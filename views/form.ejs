<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="stylesheet" type="text/css"
        href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
        integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">

    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
    <script src="//geodata.solutions/includes/countrystatecity.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js"></script>

    <title>Registration Form </title>


    <style>
        .multiselect {
            width: 100%;
        }

        .selectBox {
            position: relative;
        }

        .selectBox select {
            width: 100%;
        }

        .overSelect {
            position: absolute;
            left: 0;
            right: 0;
            top: 0;
            bottom: 0;
            
        }

        #mySelectOptions {
            display: none;
            border: 0.5px #7c7c7c solid;
            background-color: #ffffff;
            max-height: 150px;
            overflow-y: scroll;
        }

        #mySelectOptions label {
            display: block;
            font-weight: normal;
            display: block;
            white-space: nowrap;
            min-height: 1.2em;
            background-color: #ffffff00;
            padding: 0 2.25rem 0 .75rem;
            /* padding: .375rem 2.25rem .375rem .75rem; */
        }

        #mySelectOptions label:hover {
            background-color: #1e90ff;
        }
    </style>

</head>

<body>

    <div class="container">
        <form action="/form" method="post">
            <h2 class="text-center mb-4 mt-5">User Registration Form</h2>
            <div class="row jumbotron shadow-lg p-3 mb-5 bg-body-tertiary rounded border">

                <div class="col-sm-4 form-group">
                    <label for="name-l">Last Name</label>
                    <input type="text" class="form-control" name="lastname" id="lastname" minlength="2"
                        placeholder="Enter your last name." required pattern="\b([A-Za-zÀ-ÖØ-öø-ÿ]+[ '-]?)+"
                        title="Please use only letters">
                </div>
                <div class="col-sm-4 form-group">
                    <label for="name-f">First Name</label>
                    <input type="text" class="form-control" name="firstname" id="firstname" minlength="2"
                        placeholder="Enter your first name." required pattern="\b([A-Za-zÀ-ÖØ-öø-ÿ]+[ '-]?)+">
                </div>

                <div class="col-sm-4 form-group">
                    <label for="name-m">Middle Name</label>
                    <input type="text" class="form-control" name="middlename" id="middlename" minlength="2"
                        placeholder="Enter your middle name." required pattern="\b([A-Za-zÀ-ÖØ-öø-ÿ]+[ '-]?)+">
                </div>

                <div class="col-sm-4 form-group">
                    <label for="Country">Country</label>
                    <select class="form-select countries form-control custom-select browser-default" id="countryId"
                        name="country">
                        <option selected disabled value="">Select Country</option>
                    </select>
                    <div class="invalid-feedback">
                        Please select a valid Country.
                    </div>

                </div>

                <div class="col-sm-4 form-group">
                    <label for="Country">State</label>
                    <select class="form-select states form-control custom-select browser-default" id="stateId"
                        name="state">
                        <option selected disabled value="">Select State</option>
                    </select>
                    <div class="invalid-feedback">
                        Please select a valid Region.
                    </div>
                </div>

                <div class="col-sm-4 form-group">
                    <label for="Country">City</label>
                    <select class="form-select cities form-control custom-select browser-default" id="cityId"
                        name="city">
                        <option selected disabled value="">Select City</option>
                        <!-- <option selected value="pelepens">Select City</option> -->
                    </select>
                    <div class="invalid-feedback">
                        Please select a valid City.
                    </div>
                </div>

                <div class="col-sm-8 form-group">
                    <label for="Address">Home Address</label>
                    <input type="text" class="form-control" name="homeaddress" id="homeaddress" minlength="8"
                        placeholder="Blk/Lot/House/Street no ." required>
                </div>

                <div class="col-sm-2 form-group">
                    <label for="zip">Zip Code</label>
                    <input class="form-control" type="number" min="1000" max="9999" maxlength="4" id="zip" name="zip"
                        placeholder="Zip Code." required>
                </div>

                <div class="col-sm-4 form-group">
                    <label for="Date">Date of Birth</label>
                    <input type="Date" name="birthdate" class="form-control" id="birthdate" placeholder="" required>
                </div>
                <div class="col-sm-4 form-group">
                    <label for="sex">Gender</label>
                    <select id="sex" class="form-control browser-default custom-select" name="gender" required>
                        <option value="male">Male</option>
                        <option value="female">Female</option>
                        <option value="Other">Other</option>
                    </select>
                </div>

                <div class="col-sm-4 form-group">
                    <label for="sex">Civil Status</label>
                    <select id="status" name="status" required class="form-control browser-default custom-select">
                        <option value="single">Single</option>
                        <option value="married">Married</option>
                        <option value="widowed">Widowed</option>
                        <option value="divorced">Divorced</option>
                    </select>
                </div>


                <div class="col-sm-8 form-group">

                    <label for="myMultiselect">Select Hobbies</label>
                    <div id="myMultiselect" class="multiselect">
                        <div id="mySelectLabel" class="selectBox" onclick="toggleCheckboxArea()">
                            <select class="form-select form-control browser-default custom-select">
                                <option>somevalue</option>
                            </select>
                            <div class="overSelect"></div>
                        </div>
                        <div id="mySelectOptions">
                            <label for="one"><input name="hobby" type="checkbox" id="one"
                                    onchange="checkboxStatusChange()" value="Dancing" title="please select at least one" /> Dancing </label>
                            <label for="two"><input name="hobby" type="checkbox" id="two"
                                    onchange="checkboxStatusChange()" value="Watching" /> Watching</label>
                            <label for="three"><input name="hobby" type="checkbox" id="three"
                                    onchange="checkboxStatusChange()" value="Cooking" /> Cooking</label>
                            <label for="four"><input name="hobby" type="checkbox" id="four"
                                    onchange="checkboxStatusChange()" value="Writing" /> Writing</label>
                            <label for="five"><input name="hobby" type="checkbox" id="five"
                                    onchange="checkboxStatusChange()" value="Playing" /> Playing </label>
                            <label for="six"><input name="hobby" type="checkbox" id="six"
                                    onchange="checkboxStatusChange()" value="Listening" /> Listening</label>
                            <label for="seven"><input name="hobby" type="checkbox" id="seven"
                                    onchange="checkboxStatusChange()" value="Drawing" /> Drawing</label>
                            <label for="eight"><input name="hobby" type="checkbox" id="eight"
                                    onchange="checkboxStatusChange()" value="Gardening" /> Gardening</label>
                            <label for="nine"><input name="hobby" type="checkbox" id="nine"
                                    onchange="checkboxStatusChange()" value="Programming" /> Programming</label>
                            <label for="ten"><input name="hobby" type="checkbox" id="ten"
                                    onchange="checkboxStatusChange()" value="Traveling" /> Traveling</label>
                            <label for="other"><input name="hobby" type="checkbox" id="other"
                                    onchange="checkboxStatusChange()" value="Other" /> Other</label>
                            <input type="text" id="otherText" class="form-control" placeholder="Please specify"
                                style="display: none;">


                        </div>
                    </div>

                </div>

                <div class="col-sm-12">
                    <input type="checkbox" class="form-check d-inline" id="chb" required>
                    <label for="chb" class="form-check-label">&nbsp;I accept all terms and conditions.
                    </label>
                </div>

                <div class="col-sm-12 form-group mb-0 text-center">
                    <button type="submit" class="btn btn-primary ">Submit</button>
                    <button type="reset" class="btn btn-danger ">Reset</button>

                </div>

            </div>
        </form>
    </div>


</body>

<script>
    window.onload = (event) => {
        initMultiselect();
    };

    function initMultiselect() {
        checkboxStatusChange();

        document.addEventListener("click", function (evt) {
            var flyoutElement = document.getElementById('myMultiselect'),
                targetElement = evt.target; // clicked element

            do {
                if (targetElement == flyoutElement) {
                    // This is a click inside. Do nothing, just return.
                    //console.log('click inside');
                    return;
                }

                // Go up the DOM
                targetElement = targetElement.parentNode;
            } while (targetElement);

            // This is a click outside.
            toggleCheckboxArea(true);
            //console.log('click outside');
        });
    }

    function checkboxStatusChange() {
        var multiselect = document.getElementById("mySelectLabel");
        var multiselectOption = multiselect.getElementsByTagName('option')[0];

        var values = [];
        var checkboxes = document.getElementById("mySelectOptions");
        var checkedCheckboxes = checkboxes.querySelectorAll('input[type=checkbox]:checked');

        var otherCheckbox = document.getElementById("other");
       

        // Get the "Other" checkbox and the "Other" text field
        
        var otherTextField = document.getElementById("otherText");

        // Listen for changes to the text field
        otherTextField.addEventListener("input", function () {
            // If the text field is not empty, check the "Other" checkbox and set its value to the text field value
            if (otherTextField.value != "") {
                otherCheckbox.checked = true;
                otherCheckbox.value = otherTextField.value;
            }
            // If the text field is empty, uncheck the "Other" checkbox and clear its value
            else {
                otherCheckbox.checked = false;
                otherCheckbox.value = "";
            }
        });


        if (otherCheckbox.checked) {
            otherText.style.display = "block";
        } else {
            otherText.style.display = "none";
        }

        for (const item of checkedCheckboxes) {
            var checkboxValue = item.getAttribute('value');
            values.push(checkboxValue);
        }

        var dropdownValue = "Nothing is selected";
        if (values.length > 0) {
            dropdownValue = values.join(', ');
        }

        multiselectOption.innerText = dropdownValue;
    }

    function toggleCheckboxArea(onlyHide = false) {
        var checkboxes = document.getElementById("mySelectOptions");
        var displayValue = checkboxes.style.display;

        if (displayValue != "block") {
            if (onlyHide == false) {
                checkboxes.style.display = "block";
            }
        } else {
            checkboxes.style.display = "none";
        }
    }
</script>

</html>